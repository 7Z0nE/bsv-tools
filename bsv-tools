#!/bin/bash

#Configuration
BUILDDIR=build

#Text formatting handles
bold=$(tput bold)
endbold=$(tput sgr0)

#Show usage of this script.
#param 1: Help Message
show_help()
{
	echo $1
	echo "Usage:"
	echo "${bold}bsv-tools command${endbold}"
	echo "commands:"
	echo -e "\t run <filename> [-m modulename] [-p packagename] to compile and run a module."
	echo -e "\t ${bold}modulename${endbold} default: 'mk<filename>'"
	echo -e "\t ${bold}packagename${endbold} default: '<filename>'"
}

# $1 : the file to build
# $2 : the name of the package, defaults to the <filename without .bsv>
# $3 : the name of the module, defaults to 'mk'+<filename without .bsv>
# out: echoes the name of the executable
build()
{
	if [ ! -f $2 ]; then
		show_help "File does not exists: $1"
		exit
	fi
	if ! [[ $2 == *.bsv ]]; then
		show_help "Input file should be a .bsv"
		exit	
	fi
	if [ ! -d "$BUILDDIR" ]; then
		echo "Build directory does not exists. Creating it."
		mkdir "$BUILDDIR"
	fi
	filePath=$1
	file=$(basename "$filePath")
	outFile=${file%.bsv}.out
	moduleName="mk${file%.bsv}"
	echo "No modulename specified using modulename '$moduleName'"
	bsc -bdir $BUILDDIR -simdir $BUILDDIR -u -sim -g $moduleName $filePath
	bsc -bdir $BUILDDIR -simdir $BUILDDIR -sim -o $outFile -e $moduleName
	echo "$outFile" 
}

#parse command
case "$1" in
		run)
			executable=$( build $2 )
			bash $executable
			;;
		build)
			build $2
			;;
		*) show_help "Unknown command $1"
esac
